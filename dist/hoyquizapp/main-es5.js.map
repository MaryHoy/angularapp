{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/question-form/question-form.component.ts","webpack:///src/app/question-form/question-form.component.html","webpack:///src/app/questions.service.ts","webpack:///src/app/questions/questions.component.ts","webpack:///src/app/questions/questions.component.html","webpack:///src/app/quiz.model.ts","webpack:///src/app/results/results.component.ts","webpack:///src/app/results/results.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","appRoutes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","QuestionFormComponent","onChoiceMade","onChange","emit","form","value","choice","valueChanges","subscribe","templateUrl","styleUrls","QuestionsService","http","get","pipe","result","map","r","label","name","description","fileName","choices","providedIn","QuestionsComponent","route","questionsService","showResults","getQuestions","snapshot","params","quizId","questions","answers","currentQuestionIndex","values","length","quiz","undefined","Choice","correct","Question","Quiz","Answers","ResultsComponent","WelcomeComponent","getQuizzes","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent {}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: ':quizId', component: QuestionsComponent },\n  { path: '', redirectTo: \"welcome\", pathMatch: \"prefix\" },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    QuestionsComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.scss']\n})\nexport class QuestionFormComponent implements OnInit {\n\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n\n  public form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n\n  onChange = () => {\n    this.onChoiceMade.emit(this.form.value.choice);\n  }\n}\n","<div class=\"quiz\" *ngIf=\"question\">\n  <h1>{{question.label}}</h1>\n  <form [formGroup]='form'>\n      <div class=\"form-group\">\n          <label *ngFor='let choice of question.choices'>\n              <li>\n                  <input type=\"radio\" [value]='choice' formControlName='choice'>\n                  <span>{{choice.value}}</span>\n              </li>\n          </label>\n      </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Quiz, Question } from './quiz.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(public http: HttpClient) {\n  }\n\n  public getQuizzes() {\n    return this.http.get(`./assets/quiz-list.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Quiz(r.label, r.name, r.description, r.fileName));\n      })\n    );\n  }\n\n  public getQuestions(fileName: string) {\n    return this.http.get(`./assets/${fileName}.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Question(r.label, r.choices));\n      })\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit {\n\n  public quiz: Quiz;\n  public answers: Answers;\n  public questions: Question[];\n  public currentQuestionIndex: number;\n\n  public showResults = false;\n\n  // inject both the active route and the questions service\n  constructor(public route: ActivatedRoute, public questionsService: QuestionsService) {}\n\n  ngOnInit() {\n\n    // read from the dynamic route and load the proper quiz data\n    this.questionsService.getQuestions(this.route.snapshot.params.quizId)\n      .subscribe(questions => {\n        // initialize everything\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n  }\n\n}\n","<mat-card>\n    <div *ngIf='quiz && !questions' class='spinner-grow text-primary'>\n        Loading...\n    </div>\n\n    <div class='quiz'*ngIf='questions'>\n\n        <div class='questions' *ngIf='!showResults'>\n            <app-question-form\n            [question]='questions[currentQuestionIndex]'\n            (onChoiceMade)='updateChoice($event)'>\n            </app-question-form>\n\n            <button \n                class='btn btn-success'\n                (click)='nextOrViewResults()'\n                [disabled]='!answers.values[currentQuestionIndex]'\n                >{{currentQuestionIndex === questions.length - 1 ? 'View Results' : 'Next'}}\n            </button>\n\n        </div>\n\n        <app-results *ngIf='showResults' [answers]='answers'></app-results>\n    </div>\n</mat-card>\n","export class Choice {\n  constructor(public value: string, public correct?: boolean) {}\n}\n\nexport class Question {\n  constructor(public label: string, public choices: Choice[]) {}\n}\n\nexport class Quiz {\n  constructor(public label: string, public name: string, public description: string, public fileName: string) {}\n}\n\nexport class Answers {\n  constructor(public values: Choice[] = []) {}\n}","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss']\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n}\n","<mat-card>\n  <mat-card-title class=\"title\">Results</mat-card-title>\n  <mat-card-content class=\"answer mat-app-background\" *ngFor=\"let a of answers.values\" [ngClass]=\"{correct: a.correct}\">\n    {{a.value}}\n  </mat-card-content>\n  <mat-card-actions>\n    <a routerLink='/welcome' class='quiz-btn'>\n      <img mat-card-lg-image src=\"https://img.icons8.com/cotton/2x/home--v1.png\">\n  </a>\n  </mat-card-actions>\n</mat-card>","import { Component } from '@angular/core';\nimport { QuestionsService } from '../questions.service';\nimport { Quiz } from '../quiz.model';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\n\nexport class WelcomeComponent {\n  quiz: Quiz[];\n\n  constructor(private questionsService: QuestionsService) {\n\n    this.questionsService.getQuizzes()\n       .subscribe(quiz => {\n       this.quiz = quiz;\n      });\n   }\n}","<mat-card>\n    <mat-card-title>Language Quizes!</mat-card-title>\n    <mat-card-subtitle>Select a language</mat-card-subtitle>\n   \n    <a routerLink='/spanish' class='quiz-btn'>\n        <img mat-card-lg-image src=\"https://images-na.ssl-images-amazon.com/images/I/611Be4OL0ML.png\">\n    </a>\n\n    <a routerLink='/italian' class='quiz-btn'>\n        <img mat-card-lg-image src=\"https://images-na.ssl-images-amazon.com/images/I/61HBcEXzlFL.png\">\n    </a>\n\n    <a routerLink='/french' class='quiz-btn'>\n        <img mat-card-lg-image src=\"https://images-na.ssl-images-amazon.com/images/I/61vRU2cdX1L.png\">\n    </a>\n   \n</mat-card>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}